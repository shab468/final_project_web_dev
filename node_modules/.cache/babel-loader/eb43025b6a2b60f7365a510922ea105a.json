{"ast":null,"code":"var _jsxFileName = \"/Users/shabnamdin/final_project_web_dev/src/components/containers/StudentContainer.js\";\n/*==================================================\nStudentContainer.js\n\nThe Container component is responsible for stateful logic and data fetching, and\npasses data (if any) as props to the corresponding View component.\nIf needed, it also defines the component's \"connect\" function.\n================================================== */\nimport Header from './Header';\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchStudentThunk, deleteStudentThunk } from \"../../store/thunks\";\nimport { StudentView } from \"../views\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass StudentContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    // Handle deletion and redirect\n    this.handleDelete = async studentId => {\n      await this.props.deleteStudent(studentId);\n      this.props.history.push(\"/students\");\n    };\n  }\n  // Get student data from back-end database\n  componentDidMount() {\n    // Get student ID from URL\n    this.props.fetchStudent(this.props.match.params.id);\n  }\n  // Render Student view by passing student data and delete handler as props\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StudentView, {\n        student: this.props.student,\n        handleDelete: this.handleDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n// Connect component to Redux store\nconst mapState = state => {\n  return {\n    student: state.student // Get student from reducer\n  };\n};\nconst mapDispatch = dispatch => {\n  return {\n    fetchStudent: id => dispatch(fetchStudentThunk(id)),\n    deleteStudent: id => dispatch(deleteStudentThunk(id)) // ✅ Added deleteStudentThunk\n  };\n};\nexport default connect(mapState, mapDispatch)(StudentContainer);","map":{"version":3,"names":["Header","React","Component","connect","fetchStudentThunk","deleteStudentThunk","StudentView","jsxDEV","_jsxDEV","StudentContainer","constructor","args","handleDelete","studentId","props","deleteStudent","history","push","componentDidMount","fetchStudent","match","params","id","render","children","fileName","_jsxFileName","lineNumber","columnNumber","student","mapState","state","mapDispatch","dispatch"],"sources":["/Users/shabnamdin/final_project_web_dev/src/components/containers/StudentContainer.js"],"sourcesContent":["/*==================================================\nStudentContainer.js\n\nThe Container component is responsible for stateful logic and data fetching, and\npasses data (if any) as props to the corresponding View component.\nIf needed, it also defines the component's \"connect\" function.\n================================================== */\nimport Header from './Header';\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchStudentThunk, deleteStudentThunk } from \"../../store/thunks\";\nimport { StudentView } from \"../views\";\n\nclass StudentContainer extends Component {\n  // Get student data from back-end database\n  componentDidMount() {\n    // Get student ID from URL\n    this.props.fetchStudent(this.props.match.params.id);\n  }\n\n  // Handle deletion and redirect\n  handleDelete = async (studentId) => {\n    await this.props.deleteStudent(studentId);\n    this.props.history.push(\"/students\");\n  };\n\n  // Render Student view by passing student data and delete handler as props\n  render() {\n    return (\n      <div>\n        <Header />\n        <StudentView\n          student={this.props.student}\n          handleDelete={this.handleDelete}\n        />\n      </div>\n    );\n  }\n}\n\n// Connect component to Redux store\nconst mapState = (state) => {\n  return {\n    student: state.student, // Get student from reducer\n  };\n};\n\nconst mapDispatch = (dispatch) => {\n  return {\n    fetchStudent: (id) => dispatch(fetchStudentThunk(id)),\n    deleteStudent: (id) => dispatch(deleteStudentThunk(id)), // ✅ Added deleteStudentThunk\n  };\n};\n\nexport default connect(mapState, mapDispatch)(StudentContainer);\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,iBAAiB,EAAEC,kBAAkB,QAAQ,oBAAoB;AAC1E,SAASC,WAAW,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,gBAAgB,SAASP,SAAS,CAAC;EAAAQ,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAOvC;IAAA,KACAC,YAAY,GAAG,MAAOC,SAAS,IAAK;MAClC,MAAM,IAAI,CAACC,KAAK,CAACC,aAAa,CAACF,SAAS,CAAC;MACzC,IAAI,CAACC,KAAK,CAACE,OAAO,CAACC,IAAI,CAAC,WAAW,CAAC;IACtC,CAAC;EAAA;EAVD;EACAC,iBAAiBA,CAAA,EAAG;IAClB;IACA,IAAI,CAACJ,KAAK,CAACK,YAAY,CAAC,IAAI,CAACL,KAAK,CAACM,KAAK,CAACC,MAAM,CAACC,EAAE,CAAC;EACrD;EAQA;EACAC,MAAMA,CAAA,EAAG;IACP,oBACEf,OAAA;MAAAgB,QAAA,gBACEhB,OAAA,CAACR,MAAM;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACVpB,OAAA,CAACF,WAAW;QACVuB,OAAO,EAAE,IAAI,CAACf,KAAK,CAACe,OAAQ;QAC5BjB,YAAY,EAAE,IAAI,CAACA;MAAa;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEV;AACF;;AAEA;AACA,MAAME,QAAQ,GAAIC,KAAK,IAAK;EAC1B,OAAO;IACLF,OAAO,EAAEE,KAAK,CAACF,OAAO,CAAE;EAC1B,CAAC;AACH,CAAC;AAED,MAAMG,WAAW,GAAIC,QAAQ,IAAK;EAChC,OAAO;IACLd,YAAY,EAAGG,EAAE,IAAKW,QAAQ,CAAC7B,iBAAiB,CAACkB,EAAE,CAAC,CAAC;IACrDP,aAAa,EAAGO,EAAE,IAAKW,QAAQ,CAAC5B,kBAAkB,CAACiB,EAAE,CAAC,CAAC,CAAE;EAC3D,CAAC;AACH,CAAC;AAED,eAAenB,OAAO,CAAC2B,QAAQ,EAAEE,WAAW,CAAC,CAACvB,gBAAgB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}